{
	"rules": {
		".read": true,
    	".write": true,
	
		"businesses": {
			"$contact": {	
				"name": {
					".validate": "newData.isString() && newData.val().length < 49 && newData.val().length > 1
					&& newData.val() != null"  
				},
				"number": {
					".validate": "newData.isString() && newData.val().length == 9 && newData.val() !=null"
				},
				"business": {
					".validate": "newData.isString() && ((newData.val().matches(/^Fisher/)) 
					|| (newData.val().matches(/^Distributor/)) || (newData.val().matches(/^Processor/))
					|| (newData.val().matches(/^Fish Monger/))) && newData.val() != null"
				},
				"address": {
					".validate": "newData.isString() && newData.val().length < 50"  
				},
				"province": {
					".validate": "newData.isString() && ((newData.val().matches(/^AB/)) 
					|| (newData.val().matches(/^BC/)) || (newData.val().matches(/^MB/))
					|| (newData.val().matches(/^NB/)) || (newData.val().matches(/^NL/))
					|| (newData.val().matches(/^NS/)) || (newData.val().matches(/^NT/))
					|| (newData.val().matches(/^NU/)) || (newData.val().matches(/^ON/))
					|| (newData.val().matches(/^PE/)) || (newData.val().matches(/^QC/))
					|| (newData.val().matches(/^SK/)) || (newData.val().matches(/^UT/))
					|| (newData.val().matches(/^/)))"
				}
			}
		}
	}
}
